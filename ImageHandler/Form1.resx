<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADoAgAAJgAAACAgAAABAAgAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAAAAAAAAAAAAABAQEAJxkZACcnJwANDScAPzMzABkZGQABARUAPycZACczPwANJzMAPz8
        /AA0NDQAzGQ0AGRknAD8/JwAvLy8AFVVVVVVVVVVVVVVVbu1Vd1VVVVVVVULVVVbBVW7u7VdVVVVVVVd
        YAVVAGtVu7u7VVVVVVVVXYAAsAlbVVu7u1VVVVVVVVCJMA2ZBVVbu7tVVVVVVVVb2DZpnbVVVbu7tVVV
        VVVVVQiD3ZYFVVVVu7VVVVVVVVAPid3QC1VVVVu7VVVVVVsDmYUJMwAFVVVVu1VVVVVW2dmI+J0wC1VV
        VVtVVVVVWIiJ2I3YmYVVVVVVVVVVVVVVW/jdtVVVVVVVVVVVVVVVVVXYlVVVVVVVVVVVVVVVVVVVWJXd
        1VVVVVVVVVVVVVVVVVjVmdVVVVVVVVVVVVVVVVVdC92d3d3d3VVVVVVVVVVVU5sNmZmZmZ3VVVVVVVVd
        Uru10Nmd3d2Z1VVVVVVV1SP8zzIF1VXdmdVVVVVVXVIz/M8zIAVVXZ1VVVVVVVUjM0zEMzIFVV3dW1VV
        VVVSMzNMxDMzIFVVVVtVVVVV8zMzTMQzMz9VVVVVVVVVVfMzM0zEMzM/VVVVVVVVVVXzMzNMxDMzP1VV
        VVVVVVVVQzMzTMQzMzRVVVVVVVVVVUMzM0zEMzM0VVVVVd1VVVVDMzNMxDMzNFVVVVWd1VVVQzMzTMQz
        MzS1VVVVmd3VVRmZmdzCmZmRtVVVVZmZ1VVVVVVVVVVVVVVVVVWZmZ3dVVVVVVVVVVVVVVVVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwADA3MAA8MqmAAQEBAAICAgADAwMABEREQAWFhYAHBwcACIiIgApKSkAVVVVAE1N
        TQBCQkIAOTk5AIB8/wBQUP8AkwDWAP/szADG1u8A1ufnAJCprQAAADMAAABmAAAAmQAAAMwAADMAAAAz
        MwAAM2YAADOZAAAzzAAAM/8AAGYAAABmMwAAZmYAAGaZAABmzAAAZv8AAJkAAACZMwAAmWYAAJmZAACZ
        zAAAmf8AAMwAAADMMwAAzGYAAMyZAADMzAAAzP8AAP9mAAD/mQAA/8wAMwAAADMAMwAzAGYAMwCZADMA
        zAAzAP8AMzMAADMzMwAzM2YAMzOZADMzzAAzM/8AM2YAADNmMwAzZmYAM2aZADNmzAAzZv8AM5kAADOZ
        MwAzmWYAM5mZADOZzAAzmf8AM8wAADPMMwAzzGYAM8yZADPMzAAzzP8AM/8zADP/ZgAz/5kAM//MADP/
        /wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA/wBmMwAAZjMzAGYzZgBmM5kAZjPMAGYz/wBmZgAAZmYzAGZm
        ZgBmZpkAZmbMAGaZAABmmTMAZplmAGaZmQBmmcwAZpn/AGbMAABmzDMAZsyZAGbMzABmzP8AZv8AAGb/
        MwBm/5kAZv/MAMwA/wD/AMwAmZkAAJkzmQCZAJkAmQDMAJkAAACZMzMAmQBmAJkzzACZAP8AmWYAAJlm
        MwCZM2YAmWaZAJlmzACZM/8AmZkzAJmZZgCZmZkAmZnMAJmZ/wCZzAAAmcwzAGbMZgCZzJkAmczMAJnM
        /wCZ/wAAmf8zAJnMZgCZ/5kAmf/MAJn//wDMAAAAmQAzAMwAZgDMAJkAzADMAJkzAADMMzMAzDNmAMwz
        mQDMM8wAzDP/AMxmAADMZjMAmWZmAMxmmQDMZswAmWb/AMyZAADMmTMAzJlmAMyZmQDMmcwAzJn/AMzM
        AADMzDMAzMxmAMzMmQDMzMwAzMz/AMz/AADM/zMAmf9mAMz/mQDM/8wAzP//AMwAMwD/AGYA/wCZAMwz
        AAD/MzMA/zNmAP8zmQD/M8wA/zP/AP9mAAD/ZjMAzGZmAP9mmQD/ZswAzGb/AP+ZAAD/mTMA/5lmAP+Z
        mQD/mcwA/5n/AP/MAAD/zDMA/8xmAP/MmQD/zMwA/8z/AP//MwDM/2YA//+ZAP//zABmZv8AZv9mAGb/
        /wD/ZmYA/2b/AP//ZgAhAKUAX19fAHd3dwCGhoYAlpaWAMvLywCysrIA19fXAN3d3QDj4+MA6urqAPHx
        8QD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AHJycnJycnJy6hISEhIS
        EhISEhISEhISEmZmZhISEm5zcnJycnJycurqEhISDiISEhISEmYOEhISZmZmZmYSEm5ycnJycnJy6hIS
        EnQjCg4SEhIODiNmEhJmZmZmZmYSEnJycnJycurqEhISbnodCg5mCg50EmYSEhJmZmZmZhIScnJycnLq
        6hISEhIOw3QkDgpvdHQOEhISEmZmZmZmEhJycnJycuoSEhISEmZ0wyQjI3R0dGbqEhISEmZmZmZmEnJy
        cnJy6hISEhISEg7DeStvb3QjDhISEhISEhJmZmYScnJycnJy6hISEhIODrbDdHR0bwoKZhISEhISEhJm
        ZmZycnJycnLqEhJmCiR0dMMSDnQqJB0KDhISEhISEhJmZnJycnJycnLqEiNvdHR0wxq2enR0JQ4KZurq
        6uoSEhJmcnJycnJycnJyeXnDeXR0vXp0dHl0dMPqcnJy6uoSEhJycnJycnJycnJycnJyKO/DdHQocnJy
        cnJycnJy6hISEnJycnJycnJycnJycnJyc8N06nJycnJycnJycnLqEhIScnJycnJycnJycnJycnJsw3Rs
        c3NzcnJycnJy6uoSEhJycnJycnJycnJycnJycuoadGx0dHNycnJycuoSEhISEnJycnJycnJycnJycnJy
        6nMOInNzdHNzc3Nzc3NzcxIScnJycnJycnJycnJycmwSaHRmDnN0dHR0dHR0dHRzcxLqcnJycnJycnJy
        cnPq7SJgIupuDnN0dHNzc3NzdHRzEurq6urq6urqcnJzbO0gCKenCCDtDupu6urqbnN0dHMS6urq6urq
        6upyc2ztICAIp6cIICDtCg4SEhISc3RzEhLq6urq6urq6nJs7SAgIMKnp8IgICDtChISEhJzc3MSZurq
        6urq6urqbO0gICAgwqenwiAgICDtChISEhISEhJm6urq6urqcnLvJSAgICDCp6fCICAgICDvEuoSEhIS
        EhLq6urq6nJycggmICYgJsKnp8ImICYgJggS6hISEhISEurq6urq6nJyCPkgJiAmwqenwiYgJiAmCBLq
        6hISEhIS6urq6urq6hLCJiAmICbCp6fCJiAmICbCEnJycuoSEhLq6urq6urqEsImICYgJsKnp8ImICYg
        JsJscnJycurqEnRu6urq6uoSwiYgJiAmwqenwiYgJiAmwmxycnJycnLqdHRu6urq6hLCJiAmICbCp6fC
        JiAmICbCZnJycnJycnJ0dHRuburqErTj4+Pj43PU1HPj4+Pj47Qi6nJycnJycnR0dHRu6urq6urq6urq
        cnJycnLq6hISEhIS6nJycnJydHR0dHR0bm7q6urq6upycnJycnLqEhISEhIS6nJycnIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>